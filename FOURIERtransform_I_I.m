

function    output                                                                                                                                                                                                                          =...
            FOURIERtransform_I_I                                                                                                                                                                                                                   (...
            average_intensities,center,signal_length,filename                                                                                                                                                                                                                               )
%%  Description                                                                                                                                                                                            



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%   
%   Inputs                                                                                                                                                                                     %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

%       The background corrected interferogram (a column vector), the index of the center, the number of 
%       points to the right of this center to keep (where a good signal was measured), and the filename
%       to save the graph to.


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%   Outputs                                                                                                                                                                                    %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

%       Input into a graphing program.


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Description                                                                                                                                                                                %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%
%       This program takes background corrected interferograms, and their estimated centers and distances 
%       from which a good signal was measured, as input from the program

%       FOURIERtransform_I_Gs

%       The Fourier Transform is then performed here numerically.  Processing options for the background 
%       corrected interferogram, both before the transform and with the transformed signal, are set below.  
%       The program then performs the transform accordingly and calls a graphing program 

%       FOURIERtransform_amplitudes_I_G          or            FOURIERtransform_COMPLEXvalues_I_G

%       (depending on the processing options) to save an image of the result.
%       
%       

%%  Common Scripts                                                                                                                                                                                         


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Calculations                                                                                                                                                                              %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Average Value (of matrix):              mean(mean(M))

%   Average Value (of matrix's columns):    mean(M)

%   Average Value (of matrix's rows):       mean(M')'

%   Average Value                           mean(M,n)
%   (of matrix along dimension n):



%   Max Value (of matrix):                  max(max(M))

%   Max Value (of matrix's columns):        max(M)

%   Max Value (of matrix's rows):           max(M')'



%   Min Value (of matrix):                  min(min(M))

%   Min Value (of matrix's columns):        min(M)

%   Min Value (of matrix's rows):           min(M')'


%   Norm (of vector):                       norm(v)


%   Pointwise calculations:                 v.*v', v.^2, ...


%   Variance (of matrix's columns):         var(M)



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Colors                                                                                                                                                                                    %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Color to vector converter:              uisetcolor


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Conversions                                                                                                                                                                               %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Cell to Matrix:                         cell2mat(C)


%   Number to String:                       num2str(5) 


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Evaluating                                                                                                                                                                                 %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Program as Argument                     feval(<program>,<program inputs>)


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Exporting                                                                                                                                                                                  %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Matrix to .CSV:                         dlmwrite(filename,input,'precision',15);


%   Table to .TXT (comma separated)         writetable(input_table,'output location');


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Importing                                                                                                                                                                                  %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   To Cell:                                readcell(<file location>,'Range','A4:C10');
%   To Matrix:                              readmatrix(<file location>,'Range',[<starting row> <starting column>]);
%   To Table:                               readcell(<file location>,'Range','B4');


%   Directory to Structure:                 dir(['directory location\' '*.txt']);


%   Excel File to Cell Array:               [~,~,output]=xlsread(input);


%   .TXT to Table:                          readtable(input)  


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Searching                                                                                                                                                                                  %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Condition as an index:                  x(x<=0)=inf     


%   Indices and values satisfying           [row,column,value_when_evaluated]=find(losses==min(losses))
%   a condition


%   Is an element a member:                 ismember(<element>,<set>)


%   Unique Elements of Matrix:              [unique_elements, lowest_index_of_occurence,unique_indices]=unique(M)


%   Unique Elements, Number of Occurences:  accumarray(unique_indices,1)    


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Strings                                                                                                                                                                                    %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Does it Contain:                        contains(<string>,<substring>)


%   Divide in Two:                          [before,remainder] = strtok(<string>,<delimater>)


%   Divide into Portions:                   split(<string>,<delimiter>)   


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%   System commands                                                                                                                                                                            %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Copyfile:                               copyfile('original location','new location','f')


%   Make directory:                         mkdir([output '\<folder name>']);


%   Movefile:                               movefile('original location','new location','f')


%   Shut down:                              system('shutdown -s')





%%  Signal Processing:  Background Correction and Truncating                                                                                                                                               


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Background correction was already perfomed by the program:                                                                                                                                % 
%                                                                                                                                                                                              %
%    FOURIERtransform_I_Gs                                                                                                                                                                     %
%                                                                                                                                                                                              %
%    which inputs the background corrected average intensities as the column vector                                                                                                            %
%                                                                                                                                                                                              %
%    average_intensities                                                                                                                                                                       %
%                                                                                                                                                                                              %
%    This has been recorded here to provide a complete list of signal processing events.                                                                                                       %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Keep only the center and points within a distance <signal_length> to the right of it.                                                                                                     %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

average_intensities=average_intensities(center:signal_length+center,1);


%%  Signal Processing:  Translating the range                                                                                                                                                              


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Translate down by the magnitude of the average intensity (then don't remove the constant term                                                                                             %
%    when processing the transform below).                                                                                                                                                     %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% average_intensities=average_intensities-mean(average_intensities);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Translate down by half the magnitude of the center's intensity                                                                                                                            %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% average_intensities=average_intensities-0.5*average_intensities(1,1);


%%  Signal Processing:  Apodization                                                                                                                                                                        


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Linear decay                                                                                                                                                                               %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% slope_factor=1;

% indices=(1:length(average_intensities))';

% average_intensities=
%    ...average_intensities.*(slope_factor*[length(average_intensities)-indices+1]/length(average_intensities));


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Exponential decay                                                                                                                                                                          %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% decay_constant=1/2;
% 
% indices=(1:length(average_intensities))';
% 
% average_intensities=average_intensities.*exp(decay_constant*(1-indices)/length(average_intensities));


%%  Signal Processing:  Interpolation                                                                                                                                                                      


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Zero-filling (just about extends the length by a factor of c)                                                                                                                              %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% c=1;
% 
% average_intensities=vertcat(average_intensities,zeros(c*(length(average_intensities)-1),1));


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Mirror imaging (center to the end, then rewinds back to the center)                                                                                                                        %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% average_intensities=vertcat(average_intensities,flipud(average_intensities(1:end-1)));


%%  Discrete Fourier Transform                                                                                                                                                                             


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Create a matrix to perform the DFT                                                                                                                                                         %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

n=length(average_intensities)-1;

M=-2*pi*(1i)*[0:n].*[0:n]'/n;

M=exp(M);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Perform the DFT                                                                                                                                                                            %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

fourier_transform=M*average_intensities;

clear M average_intensities


%%  Transform Processing:  Truncating to remove aliasing and the constant signal                                                                                                                           


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Remove frequencies past the Nyquist (these simply repeat the amplitudes of the first half)                                                                                                 %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

fourier_transform=fourier_transform(1:floor(length(fourier_transform)/2));



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Keep the constant term of the transform                                                                                                                  %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% first_index=0;


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Remove the contant term of the transform                                                                                                                 %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

fourier_transform=fourier_transform(2:end);
first_index=1;


%%  Transform Processing:  Real or complex values and normalization                                                                                                                                        


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Use the magnitude of the just the real part                                                                                                                                                %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% fourier_transform=abs(real(fourier_transform));
% 
% fourier_transform=fourier_transform/norm(fourier_transform);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Use the magnitude of the entire (complex) value                                                                                                                                            %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

fourier_transform=abs(fourier_transform);

fourier_transform=fourier_transform/norm(fourier_transform);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Use the complex values themselves (then choose the complex plotting program below)                                                                                                         %
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

% fourier_transform=fourier_transform/norm(fourier_transform);


%%  Plot the results                                                                                                                                                                                       


FOURIERtransform_amplitudes_I_G(fourier_transform,first_index,filename)

% FOURIERtransform_COMPLEXvalues_I_G(fourier_transform,filename)



end

