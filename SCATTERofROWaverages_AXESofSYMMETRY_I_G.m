

function    SCATTERofROWaverages_AXESofSYMMETRY_I_G                                                                                                                                                                          (...
            domain,average_intensities,AXISofSYMMETRY_correspondence_1,AXISofSYMMETRY_correspondence_2,AXISofSYMMETRY_distance_1,...
            AXISofSYMMETRY_distance_2,AXISofSYMMETRY_distance_3,filename                                                                                                                                                                                                                                )   
%%  Description                                                                                                                                                                                            



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%   
%   Inputs                                                                                                                                                                                     %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

%       Column vectors for the domain and range, five estimated axes of symmetry, and a filename


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%   Outputs                                                                                                                                                                                    %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

%       A scatter plot of the range vs. domain with the five estimated axes of symmetry as vertical 
%       lines (colored and labeled), saved in the indicated file location.
%
%
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Description                                                                                                                                                                                %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

%       <>

%%  Common Scripts                                                                                                                                                                                         


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Calculations                                                                                                                                                                              %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Average Value (of matrix):              mean(mean(M))

%   Average Value (of matrix's columns):    mean(M)

%   Average Value (of matrix's rows):       mean(M')'

%   Average Value                           mean(M,n)
%   (of matrix along dimension n):



%   Max Value (of matrix):                  max(max(M))

%   Max Value (of matrix's columns):        max(M)

%   Max Value (of matrix's rows):           max(M')'



%   Min Value (of matrix):                  min(min(M))

%   Min Value (of matrix's columns):        min(M)

%   Min Value (of matrix's rows):           min(M')'


%   Norm (of vector):                       norm(v)


%   Pointwise calculations:                 v.*v', v.^2, ...


%   Variance (of matrix's columns):         var(M)



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Colors                                                                                                                                                                                    %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Color to vector converter:              uisetcolor


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Conversions                                                                                                                                                                               %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Cell to Matrix:                         cell2mat(C)


%   Number to String:                       num2str(5) 


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Evaluating                                                                                                                                                                                 %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Program as Argument                     feval(<program>,<program inputs>)


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Exporting                                                                                                                                                                                  %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Matrix to .CSV:                         dlmwrite(filename,input,'precision',15);


%   Table to .TXT (comma separated)         writetable(input_table,'output location');


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Importing                                                                                                                                                                                  %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   To Cell:                                readcell(<file location>,'Range','A4:C10');
%   To Matrix:                              readmatrix(<file location>,'Range',[<starting row> <starting column>]);
%   To Table:                               readcell(<file location>,'Range','B4');


%   Directory to Structure:                 dir(['directory location\' '*.txt']);


%   Excel File to Cell Array:               [~,~,output]=xlsread(input);


%   .TXT to Table:                          readtable(input)  


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Searching                                                                                                                                                                                  %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Condition as an index:                  x(x<=0)=inf     


%   Indices and values satisfying           [row,column,value_when_evaluated]=find(losses==min(losses))
%   a condition


%   Is an element a member:                 ismember(<element>,<set>)


%   Unique Elements of Matrix:              [unique_elements, lowest_index_of_occurence,unique_indices]=unique(M)


%   Unique Elements, Number of Occurences:  accumarray(unique_indices,1)    


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
%   Strings                                                                                                                                                                                    %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Does it Contain:                        contains(<string>,<substring>)


%   Divide in Two:                          [before,remainder] = strtok(<string>,<delimater>)


%   Divide into Portions:                   split(<string>,<delimiter>)   


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%   System commands                                                                                                                                                                            %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%


%   Copyfile:                               copyfile('original location','new location','f')


%   Make directory:                         mkdir([output '\<folder name>']);


%   Movefile:                               movefile('original location','new location','f')


%   Shut down:                              system('shutdown -s')





%%  Creating the figure and setting the image size                                                                                                                                                         



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Create s figure for outputting a saved image                                                                                                                                              %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

graph = figure('Visible','off');
                 
 
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Set the image size                                                                                                                                                                        %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%
            
set(gcf,'PaperUnits','inches','PaperPosition',[0 0 20 8]);


%%  Create the average intensity axes and plot                                                                                                                                                             


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Axes                                                                                                                                                                                      %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

axes_intensity = axes('Parent',graph,'FontName','Palatino Linotype','FontSize',12,'Position',...
                      [0.0483267479549314 0.10387323943662 0.924162613747196 0.805281690140842]);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Plot                                                                                                                                                                                      %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

scatter(domain,average_intensities,'MarkerFaceColor',[0 0 0],'MarkerEdgeColor',[0 0 0],'Marker','.');


%%  Set average intensity axes properties and hold                                                                                                                                                         


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Bounds on the x-axis                                                                                                                                                                      %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

xlim(axes_intensity,[0 2048]);
  

%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Labels:  find the order of magnitude used on the y-axis                                                                                                                                   %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

y_ticks = axes_intensity.YTick;

minimum_order_of_magnitude=0;

for i=-10:10
    if y_ticks(1,2)/10^i>=1 && y_ticks(1,2)/10^(i+1)<=1
        minimum_order_of_magnitude=i;
        break
    end
end


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Labels:  set the scientific exponent to zero but keep the tick labeling                                                                                                                   %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

if ~minimum_order_of_magnitude==0
    
    axes_intensity.YRuler.Exponent = 0;

    axes_intensity.YTickLabel=cellstr(num2str(y_ticks(:)/10^minimum_order_of_magnitude));
    
end


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Labels:  label axes                                                                                                                                                                       %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

x=xlabel('Position','FontWeight','bold','FontSize',16,'FontName','Palatino Linotype');


if minimum_order_of_magnitude==-1 

    y=ylabel({'Average Intensity \times 10'},'FontWeight','bold',...
           'FontSize',16,'FontName','Palatino Linotype');

       
elseif ~minimum_order_of_magnitude==0 

    y=ylabel({strcat('Average Intensity \times 10^{',num2str(-i),'}')},'FontWeight','bold',...
           'FontSize',16,'FontName','Palatino Linotype');
    
       
else      
    
    y=ylabel({'Average Intensity'},'FontWeight','bold',...
           'FontSize',16,'FontName','Palatino Linotype');
       
end
 

%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Labels: Positions                                                                                                                                                                         %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

set(x, 'Units', 'Normalized', 'Position', [0.5, -0.07, 0]);

set(y, 'Units', 'Normalized', 'Position', [-0.027, 0.5, 0]);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Ticks facing out                                                                                                                                                                          %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

axes_intensity.XAxis.TickDirection='out';
axes_intensity.YAxis.TickDirection='out';



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Hold                                                                                                                                                                                      %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

hold(axes_intensity,'on'); 
             

%%  Plot and label the symmetry axes                                                                                                                                                                       



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Calculate location and scale parameters for labeling the axes below                                                                                                                       %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

scale=max(average_intensities)-min(average_intensities);

location=min(average_intensities);


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Plot the correspondence loss 1 axis of symmetry                                                                                                                                           %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

if ~isempty(AXISofSYMMETRY_correspondence_1)
    
    y_values=get(gca,'ylim');
    
    plot([AXISofSYMMETRY_correspondence_1 AXISofSYMMETRY_correspondence_1],y_values,'Color',...
         [ 0.4431    0.7098    0.0431],'LineWidth', 2);
     
    text(AXISofSYMMETRY_correspondence_1-14,0.03*scale+location,'correspondence_1','Rotation',90,...
         'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
          [ 0.4431    0.7098    0.0431]);
      
    text(AXISofSYMMETRY_correspondence_1+14,0.11*scale+location,num2str(AXISofSYMMETRY_correspondence_1),...
        'Rotation',90,'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
        [ 0.4431    0.7098    0.0431]); 
           
         
end



%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Plot the correspondence loss 2 axis of symmetry                                                                                                                                           %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

if ~isempty(AXISofSYMMETRY_correspondence_2)
    
    y_values=get(gca,'ylim');
    
    plot([AXISofSYMMETRY_correspondence_2 AXISofSYMMETRY_correspondence_2],y_values,'Color',...
         [0.0627    0.6784    0.5961],'LineWidth', 2);
     
    text(AXISofSYMMETRY_correspondence_2-14,0.82*scale+location,'correspondence_2','Rotation',90,...
         'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
          [0.0627    0.6784    0.5961]);
      
    text(AXISofSYMMETRY_correspondence_2+14,0.9*scale+location,num2str(AXISofSYMMETRY_correspondence_2),...
         'Rotation',90,'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
         [0.0627    0.6784    0.5961]);
         
end


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Plot the distance loss 1 axis of symmetry                                                                                                                                                 %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

if ~isempty(AXISofSYMMETRY_distance_1)
    
    y_values=get(gca,'ylim');
    
    plot([AXISofSYMMETRY_distance_1 AXISofSYMMETRY_distance_1],y_values,'Color',[0.9804    0.4745    0.0275],...
         'LineWidth', 2);
    
    text(AXISofSYMMETRY_distance_1-14,0.29*scale+location,'distance_1','Rotation',90,'FontName',...
         'Palatino Linotype','FontSize',12,'FontWeight','bold','Color',[0.9804    0.4745    0.0275]);
     
    text(AXISofSYMMETRY_distance_1+14,0.325*scale+location,num2str(AXISofSYMMETRY_distance_1),'Rotation',...
         90,'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
         [0.9804    0.4745    0.0275]); 
     
end
  

%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Plot the distance loss 2 axis of symmetry                                                                                                                                                 %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

if ~isempty(AXISofSYMMETRY_distance_2)
    
    y_values=get(gca,'ylim');
    
    plot([AXISofSYMMETRY_distance_2 AXISofSYMMETRY_distance_2],y_values,'Color',[0.7412    0.7020    0.1922],...
         'LineWidth', 2);
    
    text(AXISofSYMMETRY_distance_2-14,0.46*scale+location,'distance_2','Rotation',90,'FontName',...
         'Palatino Linotype','FontSize',12,'FontWeight','bold','Color',[0.7412    0.7020    0.1922]);
     
    text(AXISofSYMMETRY_distance_2+14,0.495*scale+location,num2str(AXISofSYMMETRY_distance_2),'Rotation',...
        90,'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
        [0.7412    0.7020    0.1922]);
     
end

%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Plot the distance loss 3 axis of symmetry                                                                                                                                                 %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

if ~isempty(AXISofSYMMETRY_distance_3)
    
    y_values=get(gca,'ylim');
    
    plot([AXISofSYMMETRY_distance_3 AXISofSYMMETRY_distance_3],y_values,'Color',[0.5020    0.5020    0.5020],...
         'LineWidth', 2);
    
    text(AXISofSYMMETRY_distance_3-14,0.64*scale+location,'distance_3','Rotation',90,'FontName',...
         'Palatino Linotype','FontSize',12,'FontWeight','bold','Color',[0.5020    0.5020    0.5020]);
     
    text(AXISofSYMMETRY_distance_3+14,0.675*scale+location,num2str(AXISofSYMMETRY_distance_3),'Rotation',...
         90,'FontName','Palatino Linotype','FontSize',12,'FontWeight','bold','Color',...
         [0.5020    0.5020    0.5020]); 
     
end


%%  Saving the figure and clearing the memory                                                                                                                                                              


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Save the figure (saving as .jpg produces severe RAM spikes)                                                                                                                               %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

print(graph,'-dbmp',[filename '.bmp'] , '-r300');


%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------% 
%    Clear and close the current figure (very necessary; the effects of these commands are sensitive to their placement)                                                                       %  
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%

clf
close(gcf)


end